[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "weather-station"
version = "0.1.0"
description = "A robust, type-safe weather station monitoring system"
readme = "docs/index.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "Weather Station Development Team" }
]
keywords = [
    "weather",
    "monitoring",
    "sensors",
    "iot",
    "asyncio",
    "data-collection"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

dependencies = [
    "pydantic>=2.0.0",
    "asyncio>=3.4.3",
    "structlog>=23.1.0",
    "typing-extensions>=4.5.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.3.0",
    "ruff>=0.0.272",
    "black>=23.3.0"
]

sensors = [
    "adafruit-circuitpython-bme280>=2.0.0",
    "board>=1.0.0"
]

logging = [
    "structlog>=23.1.0",
    "python-json-logger>=2.0.7"
]

alerts = [
    "aiosmtplib>=2.0.1",
    "twilio>=8.2.0"
]

[project.scripts]
weather-station = "backend.main:main"

[project.urls]
Homepage = "https://github.com/yourusername/weather-station"
Documentation = "https://github.com/yourusername/weather-station/docs"
Repository = "https://github.com/yourusername/weather-station"
Issues = "https://github.com/yourusername/weather-station/issues"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "-v",
    "--doctest-modules",
    "--cov=backend",
    "--cov-report=term-missing"
]

[tool.coverage.run]
source = ["backend"]
omit = ["tests/*", "backend/example.py"]

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_any_generics = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_optional = true

[tool.ruff]
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # Line too long
    "B008",  # Do not perform function call in argument defaults
]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
